[2022-6-11 14:53:23] [INFO] Booting the 'HTTP' middleware...
[2022-6-11 14:53:23] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-11 14:53:23] [INFO] Booting the 'Views' middleware...
[2022-6-11 14:53:23] [INFO] Booting the 'Statics' middleware...
[2022-6-11 14:53:23] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-11 14:53:23] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-11 14:53:23] [ERROR] sqlToDB() error: getaddrinfo ENOTFOUND postgres | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-11 14:53:23] [ERROR] Internal Server Error Error: getaddrinfo ENOTFOUND postgres
[2022-6-11 15:4:1] [INFO] Booting the 'HTTP' middleware...
[2022-6-11 15:4:1] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-11 15:4:1] [INFO] Booting the 'Views' middleware...
[2022-6-11 15:4:1] [INFO] Booting the 'Statics' middleware...
[2022-6-11 15:4:1] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-11 15:4:1] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-11 15:4:1] [ERROR] sqlToDB() error: getaddrinfo ENOTFOUND postgres | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-11 15:4:1] [ERROR] Internal Server Error Error: getaddrinfo ENOTFOUND postgres
[2022-6-11 15:22:4] [INFO] Booting the 'HTTP' middleware...
[2022-6-11 15:22:4] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-11 15:22:4] [INFO] Booting the 'Views' middleware...
[2022-6-11 15:22:4] [INFO] Booting the 'Statics' middleware...
[2022-6-11 15:22:4] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-11 15:22:4] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-11 15:22:4] [ERROR] sqlToDB() error: getaddrinfo ENOTFOUND postgres | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-11 15:22:4] [ERROR] Internal Server Error Error: getaddrinfo ENOTFOUND postgres
[2022-6-11 15:22:4] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-11 15:22:4] [ERROR] sqlToDB() error: getaddrinfo ENOTFOUND postgres | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-11 15:22:4] [ERROR] Internal Server Error Error: getaddrinfo ENOTFOUND postgres
[2022-6-11 15:22:4] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-11 15:22:4] [ERROR] sqlToDB() error: relation "public.users" does not exist | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-11 15:22:4] [ERROR] Internal Server Error Error: relation "public.users" does not exist
[2022-6-11 15:22:4] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-11 15:22:4] [ERROR] sqlToDB() error: relation "public.users" does not exist | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-11 15:22:4] [ERROR] Internal Server Error Error: relation "public.users" does not exist
[2022-6-11 15:33:9] [INFO] Booting the 'HTTP' middleware...
[2022-6-11 15:33:9] [INFO] Booting the 'Views' middleware...
[2022-6-11 15:33:9] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-11 15:33:9] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-11 15:33:9] [INFO] Booting the 'Statics' middleware...
[2022-6-11 15:38:3] [INFO] Booting the 'HTTP' middleware...
[2022-6-11 15:38:3] [INFO] Booting the 'CsrfToken' middleware...
[2022-6-11 15:38:3] [INFO] Booting the 'Views' middleware...
[2022-6-11 15:38:3] [INFO] Booting the 'Statics' middleware...
[2022-6-11 15:38:3] [INFO] Booting the 'StatusMonitor' middleware...
[2022-6-11 15:38:3] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-11 15:38:3] [INFO] sqlToDB(): SELECT | 0
[2022-6-11 15:38:3] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-11 15:38:3] [INFO] sqlToDB(): SELECT | 0
[2022-6-11 15:38:3] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-11 15:38:3] [INFO] sqlToDB(): SELECT | 0
[2022-6-11 15:38:3] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-11 15:38:3] [INFO] sqlToDB(): SELECT | 0
[2022-6-11 15:38:3] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-11 15:38:3] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-11 15:38:3] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-11 15:38:3] [INFO] sqlToDB(): SELECT | 0
[2022-6-11 15:38:3] [INFO] sqlToDB(): SELECT | 0
[2022-6-11 15:38:3] [INFO] sqlToDB(): SELECT | 0
[2022-6-11 15:38:3] [INFO] getTransaction()
[2022-6-11 15:38:3] [INFO] sqlExecSingleRow() name: create-new-user | sql: INSERT INTO public.users(email, phone_number, user_password, fullname, gender, user_name, profile)VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING id | data: undefined
[2022-6-11 15:38:3] [INFO] sqlExecSingleRow()
[2022-6-11 15:38:3] [INFO] sqlExecSingleRow(): INSERT | 1
[2022-6-11 15:38:3] [INFO] COMMIT: Transaction Released
[2022-6-11 15:38:3] [INFO] New user created angeles6_4222507
[2022-6-11 15:38:3] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-11 15:38:3] [INFO] sqlToDB(): SELECT | 0
[2022-6-11 15:38:3] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-11 15:38:3] [INFO] sqlToDB(): SELECT | 0
[2022-6-11 15:38:3] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-11 15:38:3] [INFO] sqlToDB(): SELECT | 0
[2022-6-11 15:38:3] [INFO] sqlToDB() name: verify-userName-exist | sql: SELECT user_name FROM public.users where user_name = $1 | data: undefined
[2022-6-11 15:38:3] [INFO] sqlToDB() name: verify-phoneNumber-exist | sql: SELECT phone_number FROM public.users where phone_number = $1 | data: undefined
[2022-6-11 15:38:3] [INFO] sqlToDB() name: verify-email-exist | sql: SELECT email FROM public.users where email = $1 | data: undefined
[2022-6-11 15:38:3] [INFO] sqlToDB(): SELECT | 1
[2022-6-11 15:38:3] [INFO] sqlToDB(): SELECT | 1
[2022-6-11 15:38:3] [INFO] sqlToDB(): SELECT | 1
[2022-6-11 15:38:3] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-11 15:38:3] [INFO] sqlToDB(): SELECT | 0
[2022-6-11 15:38:3] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-11 15:38:3] [INFO] sqlToDB(): SELECT | 0
[2022-6-11 15:38:3] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-11 15:38:3] [INFO] sqlToDB(): SELECT | 0
[2022-6-11 15:38:3] [INFO] sqlToDB() name: fetch-user-by-mail-password | sql: select * from public.users where email = $1 and user_password = $2 | data: undefined
[2022-6-11 15:38:3] [INFO] sqlToDB(): SELECT | 0
